Ò
FC:\Users\danse\source\repos\FEIService\Host\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 
)  
]  !
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str !
)! "
]" #
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *ç’
6C:\Users\danse\source\repos\FEIService\Host\Program.cs
	namespace 	
Host
 
{ 
public 

static 
class 
Program 
{ 
static 
void 
Main 
( 
string 
[  
]  !
args" &
)& '
{ 	
using 
( 
ServiceHost 
host #
=$ %
new& )
ServiceHost* 5
(5 6
typeof6 <
(< =
Implementations= L
)L M
)M N
)N O
{ 
host 
. 
Open 
( 
) 
; 
MainMenu 
( 
) 
; 
} 
} 	
private## 
static## 
void## 
MainMenu## $
(##$ %
)##% &
{$$ 	
while%% 
(%% 
true%% 
)%% 
{&& 
Console'' 
.'' 
Clear'' 
('' 
)'' 
;''  
Console(( 
.(( 
	WriteLine(( !
(((! "
$str((" G
)((G H
;((H I
Console)) 
.)) 
	WriteLine)) !
())! "
$str))" ;
))); <
;))< =
Console** 
.** 
	WriteLine** !
(**! "
$str**" B
)**B C
;**C D
Console++ 
.++ 
	WriteLine++ !
(++! "
$str++" \
)++\ ]
;++] ^
Console,, 
.,, 
	WriteLine,, !
(,,! "
$str,," L
),,L M
;,,M N
Console-- 
.-- 
	WriteLine-- !
(--! "
$str--" M
)--M N
;--N O
Console.. 
... 
	WriteLine.. !
(..! "
$str.." e
)..e f
;..f g
Console// 
.// 
	WriteLine// !
(//! "
$str//" ,
)//, -
;//- .
Console00 
.00 
Write00 
(00 
$str00 7
)007 8
;008 9
var22 
input22 
=22 
Console22 #
.22# $
ReadLine22$ ,
(22, -
)22- .
;22. /
if33 
(33 
int33 
.33 
TryParse33  
(33  !
input33! &
,33& '
out33( +
int33, /
option330 6
)336 7
)337 8
{44 
switch55 
(55 
option55 "
)55" #
{66 
case77 
$num77 
:77 
RegisterUsers88 )
(88) *
)88* +
;88+ ,
break99 !
;99! "
case:: 
$num:: 
::: 
MarkAsAttended;; *
(;;* +
);;+ ,
;;;, -
break<< !
;<<! "
case== 
$num== 
:== 
MarkAsNotAttended>> -
(>>- .
)>>. /
;>>/ 0
break?? !
;??! "
case@@ 
$num@@ 
:@@ 
ReportQueueAA '
(AA' (
)AA( )
;AA) *
breakBB !
;BB! "
caseCC 
$numCC 
:CC 
CancelAppointmentDD -
(DD- .
)DD. /
;DD/ 0
breakEE !
;EE! "
caseFF 
$numFF 
:FF !
GenerateReportsByDateGG 1
(GG1 2
)GG2 3
;GG3 4
breakHH !
;HH! "
caseII 
$numII 
:II 
returnJJ "
;JJ" #
defaultKK 
:KK  
ConsoleLL #
.LL# $
	WriteLineLL$ -
(LL- .
$strLL. u
)LLu v
;LLv w
ConsoleMM #
.MM# $
ReadKeyMM$ +
(MM+ ,
)MM, -
;MM- .
breakNN !
;NN! "
}OO 
}PP 
elseQQ 
{RR 
ConsoleSS 
.SS 
	WriteLineSS %
(SS% &
$strSS& o
)SSo p
;SSp q
ConsoleTT 
.TT 
ReadKeyTT #
(TT# $
)TT$ %
;TT% &
}UU 
}VV 
}WW 	
private\\ 
static\\ 
void\\ !
GenerateReportsByDate\\ 1
(\\1 2
)\\2 3
{]] 	
DateTime^^ 

reportDate^^ 
=^^  !
DateTime^^" *
.^^* +
MinValue^^+ 3
;^^3 4
bool__ 
isValidDate__ 
=__ 
false__ $
;__$ %
whilebb 
(bb 
!bb 
isValidDatebb 
)bb  
{cc 
Consoledd 
.dd 
Writedd 
(dd 
$strdd O
)ddO P
;ddP Q
stringee 
	inputDateee  
=ee! "
Consoleee# *
.ee* +
ReadLineee+ 3
(ee3 4
)ee4 5
;ee5 6
ifgg 
(gg 
DateTimegg 
.gg 
TryParseExactgg *
(gg* +
	inputDategg+ 4
,gg4 5
$strgg6 B
,ggB C
CultureInfoggD O
.ggO P
InvariantCultureggP `
,gg` a
DateTimeStylesggb p
.ggp q
Noneggq u
,ggu v
outggw z

reportDate	gg{ Ö
)
ggÖ Ü
)
ggÜ á
{hh 
isValidDateii 
=ii  !
trueii" &
;ii& '
}jj 
elsekk 
{ll 
Consolemm 
.mm 
	WriteLinemm %
(mm% &
$strmm& x
)mmx y
;mmy z
}nn 
}oo 
Implementationspp 
serviceInstancepp +
=pp, -
newpp. 1
Implementationspp2 A
(ppA B
)ppB C
;ppC D
Listqq 
<qq 
Domainqq 
.qq 
ViewAppointmentqq '
>qq' (

reportDataqq) 3
=qq3 4
newqq5 8
Listqq9 =
<qq= >
Domainqq> D
.qqD E
ViewAppointmentqqE T
>qqT U
(qqU V
)qqV W
;qqW X
tryrr 
{ss 

reportDatatt 
=tt 
serviceInstancett ,
.tt, -&
GetAppointmentReportByDatett- G
(ttG H

reportDatettH R
)ttR S
;ttS T
}vv 
catchww 
(ww 
	Exceptionww 
exww 
)ww  
{xx 
Consoleyy 
.yy 
	WriteLineyy !
(yy! "
$"yy" $
$stryy$ A
{yyA B
exyyB D
.yyD E
MessageyyE L
}yyL M
"yyM N
)yyN O
;yyO P
}zz 
if|| 
(|| 

reportData|| 
.|| 
Count||  
>||! "
$num||# $
)||$ %
{}} 
Console~~ 
.~~ 
	WriteLine~~ !
(~~! "
$str~~" 5
)~~5 6
;~~6 7
foreach 
( 
var 
appointment (
in) +

reportData, 6
)6 7
{
ÄÄ 
string
ÅÅ 

statusName
ÅÅ %
=
ÅÅ& '
GetStatusName
ÅÅ( 5
(
ÅÅ5 6
appointment
ÅÅ6 A
.
ÅÅA B
status
ÅÅB H
)
ÅÅH I
;
ÅÅI J
Console
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ %
(
ÇÇ% &
$"
ÇÇ& (
$str
ÇÇ( ,
{
ÇÇ, -
appointment
ÇÇ- 8
.
ÇÇ8 9
idAppointment
ÇÇ9 F
}
ÇÇF G
$str
ÇÇG P
{
ÇÇP Q
appointment
ÇÇQ \
.
ÇÇ\ ]
attendedDate
ÇÇ] i
}
ÇÇi j
$str
ÇÇj x
{
ÇÇx y
appointmentÇÇy Ñ
.ÇÇÑ Ö
fullNameÇÇÖ ç
}ÇÇç é
$strÇÇé õ
{ÇÇõ ú
appointmentÇÇú ß
.ÇÇß ®
	idStudentÇÇ® ±
}ÇÇ± ≤
$strÇÇ≤ º
{ÇÇº Ω

statusNameÇÇΩ «
}ÇÇ« »
"ÇÇ» …
)ÇÇ…  
;ÇÇ  À
}
ÉÉ 
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
Console
áá 
.
áá 
	WriteLine
áá !
(
áá! "
$str
áá" W
)
ááW X
;
ááX Y
}
àà 
PressAnyKey
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ãã 	
private
íí 
static
íí 
string
íí 
GetStatusName
íí +
(
íí+ ,
int
íí, /
status
íí0 6
)
íí6 7
{
ìì 	
string
îî 

statusName
îî 
;
îî 
switch
ïï 
(
ïï 
status
ïï 
)
ïï 
{
ññ 
case
óó 
$num
óó 
:
óó 

statusName
òò 
=
òò  
$str
òò! ,
;
òò, -
break
ôô 
;
ôô 
case
öö 
$num
öö 
:
öö 

statusName
õõ 
=
õõ  
$str
õõ! +
;
õõ+ ,
break
úú 
;
úú 
case
ùù 
$num
ùù 
:
ùù 

statusName
ûû 
=
ûû  
$str
ûû! =
;
ûû= >
break
üü 
;
üü 
case
†† 
$num
†† 
:
†† 

statusName
°° 
=
°°  
$str
°°! ;
;
°°; <
break
¢¢ 
;
¢¢ 
case
££ 
$num
££ 
:
££ 

statusName
§§ 
=
§§  
$str
§§! .
;
§§. /
break
•• 
;
•• 
case
¶¶ 
$num
¶¶ 
:
¶¶ 

statusName
ßß 
=
ßß  
$str
ßß! .
;
ßß. /
break
®® 
;
®® 
default
©© 
:
©© 

statusName
™™ 
=
™™  
$str
™™! .
;
™™. /
break
´´ 
;
´´ 
}
¨¨ 
return
≠≠ 

statusName
≠≠ 
;
≠≠ 
}
ÆÆ 	
private
≥≥ 
static
≥≥ 
void
≥≥ 
CancelAppointment
≥≥ -
(
≥≥- .
)
≥≥. /
{
¥¥ 	
Console
µµ 
.
µµ 
Write
µµ 
(
µµ 
$str
µµ A
)
µµA B
;
µµB C
int
∂∂ 
idAppointment
∂∂ 
;
∂∂ 
while
∑∑ 
(
∑∑ 
!
∑∑ 
int
∑∑ 
.
∑∑ 
TryParse
∑∑  
(
∑∑  !
Console
∑∑! (
.
∑∑( )
ReadLine
∑∑) 1
(
∑∑1 2
)
∑∑2 3
,
∑∑3 4
out
∑∑5 8
idAppointment
∑∑9 F
)
∑∑F G
)
∑∑G H
{
∏∏ 
Console
ππ 
.
ππ 
	WriteLine
ππ !
(
ππ! "
$str
ππ" _
)
ππ_ `
;
ππ` a
Console
∫∫ 
.
∫∫ 
Write
∫∫ 
(
∫∫ 
$str
∫∫ E
)
∫∫E F
;
∫∫F G
}
ªª 
Console
ΩΩ 
.
ΩΩ 
Write
ΩΩ 
(
ΩΩ 
$str
ΩΩ B
)
ΩΩB C
;
ΩΩC D
string
ææ 
reason
ææ 
=
ææ 
Console
ææ #
.
ææ# $
ReadLine
ææ$ ,
(
ææ, -
)
ææ- .
;
ææ. /
while
øø 
(
øø 
string
øø 
.
øø 
IsNullOrEmpty
øø '
(
øø' (
reason
øø( .
)
øø. /
)
øø/ 0
{
¿¿ 
Console
¡¡ 
.
¡¡ 
	WriteLine
¡¡ !
(
¡¡! "
$str
¡¡" l
)
¡¡l m
;
¡¡m n
reason
¬¬ 
=
¬¬ 
Console
¬¬  
.
¬¬  !
ReadLine
¬¬! )
(
¬¬) *
)
¬¬* +
;
¬¬+ ,
}
√√ 
Implementations
ƒƒ 
serviceInstance
ƒƒ +
=
ƒƒ, -
new
ƒƒ. 1
Implementations
ƒƒ2 A
(
ƒƒA B
)
ƒƒB C
;
ƒƒC D
try
≈≈ 
{
∆∆ 
serviceInstance
«« 
.
««  
CancelAppointment
««  1
(
««1 2
idAppointment
««2 ?
,
««? @
reason
««A G
)
««G H
;
««H I
Console
»» 
.
»» 
	WriteLine
»» !
(
»»! "
$str
»»" =
)
»»= >
;
»»> ?
}
…… 
catch
   
(
   
	Exception
   
ex
   
)
    
{
ÀÀ 
Console
ÃÃ 
.
ÃÃ 
	WriteLine
ÃÃ !
(
ÃÃ! "
$str
ÃÃ" W
+
ÃÃX Y
ex
ÃÃZ \
.
ÃÃ\ ]
Message
ÃÃ] d
)
ÃÃd e
;
ÃÃe f
}
ÕÕ 
PressAnyKey
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 	
private
‘‘ 
static
‘‘ 
void
‘‘ 
ReportQueue
‘‘ '
(
‘‘' (
)
‘‘( )
{
’’ 	
Implementations
÷÷ 
serviceInstance
÷÷ +
=
÷÷, -
new
÷÷. 1
Implementations
÷÷2 A
(
÷÷A B
)
÷÷B C
;
÷÷C D
List
◊◊ 
<
◊◊ 
Domain
◊◊ 
.
◊◊ %
ViewStudentsQueueReport
◊◊ /
>
◊◊/ 0

reportData
◊◊1 ;
=
◊◊< =
new
◊◊> A
List
◊◊B F
<
◊◊F G
Domain
◊◊G M
.
◊◊M N%
ViewStudentsQueueReport
◊◊N e
>
◊◊e f
(
◊◊f g
)
◊◊g h
;
◊◊h i
try
ÿÿ 
{
ŸŸ 

reportData
⁄⁄ 
=
⁄⁄ 
serviceInstance
⁄⁄ ,
.
⁄⁄, -$
GetStudentsQueueReport
⁄⁄- C
(
⁄⁄C D
)
⁄⁄D E
;
⁄⁄E F
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
ex
‹‹ 
)
‹‹  
{
›› 
Console
ﬁﬁ 
.
ﬁﬁ 
	WriteLine
ﬁﬁ !
(
ﬁﬁ! "
$"
ﬁﬁ" $
$str
ﬁﬁ$ A
{
ﬁﬁA B
ex
ﬁﬁB D
.
ﬁﬁD E
Message
ﬁﬁE L
}
ﬁﬁL M
"
ﬁﬁM N
)
ﬁﬁN O
;
ﬁﬁO P
}
ﬂﬂ 
if
‚‚ 
(
‚‚ 

reportData
‚‚ 
.
‚‚ 
Count
‚‚  
>
‚‚! "
$num
‚‚# $
)
‚‚$ %
{
„„ 
Console
‰‰ 
.
‰‰ 
	WriteLine
‰‰ !
(
‰‰! "
$str
‰‰" 5
)
‰‰5 6
;
‰‰6 7
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
appointment
ÂÂ (
in
ÂÂ) +

reportData
ÂÂ, 6
)
ÂÂ6 7
{
ÊÊ 
string
ÁÁ 

statusName
ÁÁ %
=
ÁÁ& '
GetStatusName
ÁÁ( 5
(
ÁÁ5 6
appointment
ÁÁ6 A
.
ÁÁA B
status
ÁÁB H
)
ÁÁH I
;
ÁÁI J
Console
ËË 
.
ËË 
	WriteLine
ËË %
(
ËË% &
$"
ËË& (
$str
ËË( ,
{
ËË, -
appointment
ËË- 8
.
ËË8 9
idAppointment
ËË9 F
}
ËËF G
$str
ËËG P
{
ËËP Q
appointment
ËËQ \
.
ËË\ ]
attendedDate
ËË] i
}
ËËi j
$str
ËËj x
{
ËËx y
appointmentËËy Ñ
.ËËÑ Ö
studentNameËËÖ ê
}ËËê ë
$strËËë û
{ËËû ü
appointmentËËü ™
.ËË™ ´
	idStudentËË´ ¥
}ËË¥ µ
$strËËµ ø
{ËËø ¿

statusNameËË¿  
}ËË  À
"ËËÀ Ã
)ËËÃ Õ
;ËËÕ Œ
}
ÈÈ 
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
Console
ÌÌ 
.
ÌÌ 
	WriteLine
ÌÌ !
(
ÌÌ! "
$str
ÌÌ" F
)
ÌÌF G
;
ÌÌG H
}
ÓÓ 
PressAnyKey
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
}
 	
private
ıı 
static
ıı 
void
ıı 
MarkAsNotAttended
ıı -
(
ıı- .
)
ıı. /
{
ˆˆ 	
int
˜˜ 
idAppointment
˜˜ 
;
˜˜ 
while
¯¯ 
(
¯¯ 
!
¯¯ 
int
¯¯ 
.
¯¯ 
TryParse
¯¯  
(
¯¯  !
Console
¯¯! (
.
¯¯( )
ReadLine
¯¯) 1
(
¯¯1 2
)
¯¯2 3
,
¯¯3 4
out
¯¯5 8
idAppointment
¯¯9 F
)
¯¯F G
)
¯¯G H
{
˘˘ 
Console
˙˙ 
.
˙˙ 
	WriteLine
˙˙ !
(
˙˙! "
$str
˙˙" _
)
˙˙_ `
;
˙˙` a
Console
˚˚ 
.
˚˚ 
Write
˚˚ 
(
˚˚ 
$str
˚˚ Q
)
˚˚Q R
;
˚˚R S
}
¸¸ 
Console
˝˝ 
.
˝˝ 
Write
˝˝ 
(
˝˝ 
$str
˝˝ `
)
˝˝` a
;
˝˝a b
string
˛˛ 
reason
˛˛ 
=
˛˛ 
Console
˛˛ #
.
˛˛# $
ReadLine
˛˛$ ,
(
˛˛, -
)
˛˛- .
;
˛˛. /
while
ˇˇ 
(
ˇˇ 
string
ˇˇ 
.
ˇˇ 
IsNullOrEmpty
ˇˇ '
(
ˇˇ' (
reason
ˇˇ( .
)
ˇˇ. /
)
ˇˇ/ 0
{
ÄÄ 
Console
ÅÅ 
.
ÅÅ 
	WriteLine
ÅÅ !
(
ÅÅ! "
$str
ÅÅ" l
)
ÅÅl m
;
ÅÅm n
reason
ÇÇ 
=
ÇÇ 
Console
ÇÇ  
.
ÇÇ  !
ReadLine
ÇÇ! )
(
ÇÇ) *
)
ÇÇ* +
;
ÇÇ+ ,
}
ÉÉ 
Implementations
ÑÑ 
serviceInstance
ÑÑ +
=
ÑÑ, -
new
ÑÑ. 1
Implementations
ÑÑ2 A
(
ÑÑA B
)
ÑÑB C
;
ÑÑC D
serviceInstance
ÖÖ 
.
ÖÖ *
MarkAppointmentAsNotAttended
ÖÖ 8
(
ÖÖ8 9
idAppointment
ÖÖ9 F
,
ÖÖF G
reason
ÖÖH N
)
ÖÖN O
;
ÖÖO P
PressAnyKey
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 	
private
åå 
static
åå 
void
åå 
MarkAsAttended
åå *
(
åå* +
)
åå+ ,
{
çç 	
Console
éé 
.
éé 
Write
éé 
(
éé 
$str
éé M
)
ééM N
;
ééN O
int
èè 
idAppointment
èè 
;
èè 
while
êê 
(
êê 
!
êê 
int
êê 
.
êê 
TryParse
êê  
(
êê  !
Console
êê! (
.
êê( )
ReadLine
êê) 1
(
êê1 2
)
êê2 3
,
êê3 4
out
êê5 8
idAppointment
êê9 F
)
êêF G
)
êêG H
{
ëë 
Console
íí 
.
íí 
	WriteLine
íí !
(
íí! "
$str
íí" _
)
íí_ `
;
íí` a
Console
ìì 
.
ìì 
Write
ìì 
(
ìì 
$str
ìì Q
)
ììQ R
;
ììR S
}
îî 
Implementations
ññ 
serviceInstance
ññ +
=
ññ, -
new
ññ. 1
Implementations
ññ2 A
(
ññA B
)
ññB C
;
ññC D
serviceInstance
óó 
.
óó '
MarkAppointmentAsAttended
óó 5
(
óó5 6
idAppointment
óó6 C
)
óóC D
;
óóD E
PressAnyKey
òò 
(
òò 
)
òò 
;
òò 
}
ôô 	
static
úú 
bool
úú #
RegexMatchWithTimeout
úú )
(
úú) *
string
úú* 0
input
úú1 6
,
úú6 7
string
úú8 >
pattern
úú? F
,
úúF G
TimeSpan
úúH P
timeout
úúQ X
)
úúX Y
{
ùù 	
try
ûû 
{
üü 
return
†† 
Regex
†† 
.
†† 
IsMatch
†† $
(
††$ %
input
††% *
,
††* +
pattern
††, 3
,
††3 4
RegexOptions
††5 A
.
††A B
None
††B F
,
††F G
timeout
††H O
)
††O P
;
††P Q
}
°° 
catch
¢¢ 
(
¢¢ (
RegexMatchTimeoutException
¢¢ -
)
¢¢- .
{
££ 
return
§§ 
false
§§ 
;
§§ 
}
•• 
}
¶¶ 	
private
™™ 
static
™™ 
void
™™ 
RegisterUsers
™™ )
(
™™) *
)
™™* +
{
´´ 	
Console
¨¨ 
.
¨¨ 
Write
¨¨ 
(
¨¨ 
$str
¨¨ G
)
¨¨G H
;
¨¨H I
string
≠≠ 
studentName
≠≠ 
=
≠≠  
Console
≠≠! (
.
≠≠( )
ReadLine
≠≠) 1
(
≠≠1 2
)
≠≠2 3
;
≠≠3 4
while
ÆÆ 
(
ÆÆ 
string
ÆÆ 
.
ÆÆ 
IsNullOrEmpty
ÆÆ '
(
ÆÆ' (
studentName
ÆÆ( 3
)
ÆÆ3 4
)
ÆÆ4 5
{
ØØ 
Console
∞∞ 
.
∞∞ 
	WriteLine
∞∞ !
(
∞∞! "
$str
∞∞" l
)
∞∞l m
;
∞∞m n
studentName
±± 
=
±± 
Console
±± %
.
±±% &
ReadLine
±±& .
(
±±. /
)
±±/ 0
;
±±0 1
}
≤≤ 
Console
¥¥ 
.
¥¥ 
Write
¥¥ 
(
¥¥ 
$str
¥¥ A
)
¥¥A B
;
¥¥B C
string
µµ 
	studentId
µµ 
=
µµ 
Console
µµ &
.
µµ& '
ReadLine
µµ' /
(
µµ/ 0
)
µµ0 1
;
µµ1 2
while
∂∂ 
(
∂∂ 
string
∂∂ 
.
∂∂ 
IsNullOrEmpty
∂∂ '
(
∂∂' (
	studentId
∂∂( 1
)
∂∂1 2
||
∂∂3 5
!
∂∂6 7#
RegexMatchWithTimeout
∂∂7 L
(
∂∂L M
	studentId
∂∂M V
,
∂∂V W
$str
∂∂X d
,
∂∂d e
TimeSpan
∂∂f n
.
∂∂n o
FromSeconds
∂∂o z
(
∂∂z {
$num
∂∂{ |
)
∂∂| }
)
∂∂} ~
)
∂∂~ 
{
∑∑ 
Console
∏∏ 
.
∏∏ 
	WriteLine
∏∏ !
(
∏∏! "
$str
∏∏" L
)
∏∏L M
;
∏∏M N
	studentId
ππ 
=
ππ 
Console
ππ #
.
ππ# $
ReadLine
ππ$ ,
(
ππ, -
)
ππ- .
;
ππ. /
}
∫∫ 
Console
ºº 
.
ºº 
Write
ºº 
(
ºº 
$str
ºº B
)
ººB C
;
ººC D
string
ΩΩ 
password
ΩΩ 
=
ΩΩ 
Console
ΩΩ %
.
ΩΩ% &
ReadLine
ΩΩ& .
(
ΩΩ. /
)
ΩΩ/ 0
;
ΩΩ0 1
while
ææ 
(
ææ 
string
ææ 
.
ææ 
IsNullOrEmpty
ææ '
(
ææ' (
password
ææ( 0
)
ææ0 1
)
ææ1 2
{
øø 
Console
¿¿ 
.
¿¿ 
	WriteLine
¿¿ !
(
¿¿! "
$str
¿¿" n
)
¿¿n o
;
¿¿o p
password
¡¡ 
=
¡¡ 
Console
¡¡ "
.
¡¡" #
ReadLine
¡¡# +
(
¡¡+ ,
)
¡¡, -
;
¡¡- .
}
¬¬ 
Console
ƒƒ 
.
ƒƒ 
Write
ƒƒ 
(
ƒƒ 
$str
ƒƒ G
)
ƒƒG H
;
ƒƒH I
int
≈≈ "
idEducationalProgram
≈≈ $
;
≈≈$ %
while
∆∆ 
(
∆∆ 
!
∆∆ 
int
∆∆ 
.
∆∆ 
TryParse
∆∆  
(
∆∆  !
Console
∆∆! (
.
∆∆( )
ReadLine
∆∆) 1
(
∆∆1 2
)
∆∆2 3
,
∆∆3 4
out
∆∆5 8"
idEducationalProgram
∆∆9 M
)
∆∆M N
)
∆∆N O
{
«« 
Console
»» 
.
»» 
	WriteLine
»» !
(
»»! "
$str
»»" b
)
»»b c
;
»»c d
Console
…… 
.
…… 
Write
…… 
(
…… 
$str
…… =
)
……= >
;
……> ?
}
   
Console
ÃÃ 
.
ÃÃ 
Write
ÃÃ 
(
ÃÃ 
$str
ÃÃ C
)
ÃÃC D
;
ÃÃD E
int
ÕÕ 
idTutor
ÕÕ 
;
ÕÕ 
while
ŒŒ 
(
ŒŒ 
!
ŒŒ 
int
ŒŒ 
.
ŒŒ 
TryParse
ŒŒ  
(
ŒŒ  !
Console
ŒŒ! (
.
ŒŒ( )
ReadLine
ŒŒ) 1
(
ŒŒ1 2
)
ŒŒ2 3
,
ŒŒ3 4
out
ŒŒ5 8
idTutor
ŒŒ9 @
)
ŒŒ@ A
)
ŒŒA B
{
œœ 
Console
–– 
.
–– 
	WriteLine
–– !
(
––! "
$str
––" ]
)
––] ^
;
––^ _
Console
—— 
.
—— 
Write
—— 
(
—— 
$str
—— 9
)
——9 :
;
——: ;
}
““ 
Domain
’’ 
.
’’ 
ViewStudentInfo
’’ "
studentInfo
’’# .
=
’’/ 0
new
’’1 4
Domain
’’5 ;
.
’’; <
ViewStudentInfo
’’< K
(
’’K L
)
’’L M
{
÷÷ 
password
◊◊ 
=
◊◊ 
Complements
◊◊ &
.
◊◊& '
EncryptPassword
◊◊' 6
(
◊◊6 7
password
◊◊7 ?
)
◊◊? @
,
◊◊@ A
fullName
ÿÿ 
=
ÿÿ 
studentName
ÿÿ &
,
ÿÿ& '
	idStudent
ŸŸ 
=
ŸŸ 
	studentId
ŸŸ %
,
ŸŸ% &
idCareer
⁄⁄ 
=
⁄⁄ "
idEducationalProgram
⁄⁄ /
,
⁄⁄/ 0
idTutor
€€ 
=
€€ 
idTutor
€€ !
,
€€! "
}
‹‹ 
;
‹‹ 
Implementations
›› 
serviceInstance
›› +
=
››, -
new
››. 1
Implementations
››2 A
(
››A B
)
››B C
;
››C D
if
ﬁﬁ 
(
ﬁﬁ 
serviceInstance
ﬁﬁ 
.
ﬁﬁ  
RegisterStudent
ﬁﬁ  /
(
ﬁﬁ/ 0
studentInfo
ﬁﬁ0 ;
)
ﬁﬁ; <
)
ﬁﬁ< =
{
ﬂﬂ 
Console
‡‡ 
.
‡‡ 
	WriteLine
‡‡ !
(
‡‡! "
$str
‡‡" C
)
‡‡C D
;
‡‡D E
}
·· 
else
‚‚ 
{
„„ 
Console
‰‰ 
.
‰‰ 
	WriteLine
‰‰ !
(
‰‰! "
$str
‰‰" K
)
‰‰K L
;
‰‰L M
}
ÂÂ 
PressAnyKey
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
}
ËË 	
private
ÌÌ 
static
ÌÌ 
void
ÌÌ 
PressAnyKey
ÌÌ '
(
ÌÌ' (
)
ÌÌ( )
{
ÓÓ 	
Console
ÔÔ 
.
ÔÔ 
	WriteLine
ÔÔ 
(
ÔÔ 
$str
ÔÔ J
)
ÔÔJ K
;
ÔÔK L
Console
 
.
 
ReadKey
 
(
 
)
 
;
 
}
ÒÒ 	
}
ÚÚ 
}ÛÛ 